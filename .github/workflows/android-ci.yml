name: Android CI

on:
  push:
    branches: [ "main", "master" ]
    paths: 
      - 'DevOps/**'  # Триггерится только при изменениях в папке DevOps
  pull_request:
    branches: [ "main", "master" ]
    paths:
      - 'DevOps/**'

jobs:
  Android-build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'  # Или версия, указанная в вашем проекте

    - name: Validate Gradle Wrapper
      uses: gradle/wrapper-validation-action@v1
    
    - name: Cache Gradle dependencies
  uses: actions/cache@v3
  with:
    path: |
      ~/.gradle/caches
      ~/.gradle/wrapper
    key: ${{ runner.os }}-gradle-${{ hashFiles('DevOps/gradle/wrapper/gradle-wrapper.properties', 'DevOps/build.gradle') }}
    restore-keys: |
      ${{ runner.os }}-gradle-

    - name: Cache Android SDK
      if: runner.os == 'Linux'  # SDK кэшируется только для Linux
      uses: actions/cache@v3
      with:
        path: |
          ~/.android/build-cache
          ~/.android/cache
        key: ${{ runner.os }}-android-sdk-${{ secrets.ANDROID_SDK_VERSION }}
        restore-keys: |
          ${{ runner.os }}-android-sdk-

    - name: Cache Gradle build
      uses: actions/cache@v3
      with:
        path: |
          DevOps/app/build
          DevOps/build
        key: ${{ runner.os }}-gradle-build-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-gradle-build-
    
    - name: Build with Gradle
      working-directory: ./DevOps  # Переход в папку проекта
      run: ./gradlew assembleDebug

    - name: Run tests
      working-directory: ./DevOps
      run: ./gradlew test

    - name: Upload APK artifact
      if: success()
      uses: actions/upload-artifact@v3
      with:
        name: android-apk
        path: DevOps/app/build/outputs/apk/**/*.apk